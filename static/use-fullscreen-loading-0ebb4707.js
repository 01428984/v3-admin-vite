import{ax as e,e as n,i as s,j as a,k as t,m as o,n as r,H as l,l as c,Q as i}from"./index-1842d0d7.js";const u={lock:!0,text:"加载中..."},d=(n,s={})=>{let a;return async(...t)=>{try{return a=e.service({...u,...s}),await n(...t)}finally{null==a||a.close()}}},m={code:0,data:{},message:"获取成功"};function g(){return new Promise((e=>{setTimeout((()=>{e(m)}),1e3)}))}function f(){return new Promise(((e,n)=>{setTimeout((()=>{n(new Error("发生错误"))}),1e3)}))}const k={class:"app-container"},p=c("h4",null,"该示例是演示：通过将要执行的函数传递给 hook，让 hook 自动开启全屏 loading，函数执行结束后自动关闭 loading",-1),w=n({__name:"use-fullscreen-loading",setup(e){const n={text:"即将发生错误...",background:"#F56C6C20",svg:'\n  <path class="path" d="\n    M 30 15\n    L 28 17\n    M 25.61 25.61\n    A 15 15, 0, 0, 1, 15 30\n    A 15 15, 0, 1, 1, 27.99 7.5\n    L 15 15\n  " style="stroke-width: 4px; fill: rgba(0, 0, 0, 0)"/>\n',svgViewBox:"-10, -10, 50, 50"},c=async()=>{const e=await d(g)();i.success(e.message)},u=async()=>{try{await d(f,n)()}catch(e){i.error(e.message)}};return(e,n)=>{const i=s("el-button");return a(),t("div",k,[p,o(i,{onClick:c},{default:r((()=>[l("查询成功")])),_:1}),o(i,{onClick:u},{default:r((()=>[l("查询失败")])),_:1})])}}});export{w as default};
